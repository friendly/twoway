[{"path":"http://friendly.github.io/twoway/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Friendly. Author, maintainer. Richard M. Heiberger. Author. John Fox. Contributor.","code":""},{"path":"http://friendly.github.io/twoway/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Friendly M, Heiberger RM (2024). twoway: Analysis Two-Way Tables. R package version 0.6.4, https://github.com/friendly/twoway.","code":"@Manual{,   title = {twoway: Analysis of Two-Way Tables},   author = {Michael Friendly and Richard M. Heiberger},   year = {2024},   note = {R package version 0.6.4},   url = {https://github.com/friendly/twoway}, }"},{"path":"http://friendly.github.io/twoway/index.html","id":"twoway-","dir":"","previous_headings":"","what":"Analysis of Two-Way Tables","title":"Analysis of Two-Way Tables","text":"Analysis Two-Way Tables la Tukey Version: 0.6.3 twoway package provides analysis graphical methods two-way tables one observation per cell, typically used Analysis Variance (ANOVA) context. methods follow Tukey (1949), “One Degree Freedom Non-additivity”, explained concretely Tukey (1972), Exploratory Data Analysis, graphical ideas interesting general: display assumed additive relation two factors graphically, visualize departures additive fit? assess visually whether power transformation response might nearly additive factors? goal package introduce ideas R, allow development. R implementation based SAS macro, twoway.sas.","code":""},{"path":"http://friendly.github.io/twoway/index.html","id":"installation-","dir":"","previous_headings":"","what":"Installation 📦","title":"Analysis of Two-Way Tables","text":"currently released package can installed directly CRAN: can install development version twoway github :","code":"install.packages(\"twoway\") # install.packages(\"devtools\") devtools::install_github(\"friendly/twoway\")"},{"path":"http://friendly.github.io/twoway/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analysis of Two-Way Tables","text":"trivial example shows analysis 3 x 3 table, containing mean reaction times three subjects presented three types sentences asked judge whether sentence TRUE FALSE. questions : reaction time vary subject sentence type? Can results accounted additive model, effect subject sentence type? unusual observations deviate additive model? systematic departures additivity, power transformation response (1/x, log(x), sqrt(x), x2x^2, …) make simpler additive model tenable, easily understood? twoway() function gives basic analysis: decomposition two-way table, giving : grand mean (μ=x‾..\\mu = \\bar{x}_{..}), row effects (αi=x‾.−μ\\alpha_i = \\bar{x}_{.}-\\mu), column effects (βj=x‾.j−μ\\beta_j = \\bar{x}_{.j}-\\mu), residuals (xij−μ−αi−βjx_{ij}-\\mu -\\alpha_i -\\beta_j) twoway() also allows robust fitting row column medians, using Tukey’s idea median polish, implemented stats::medpolish(). uses method=\"median\" call twoway(). result much simpler, residuals closer 0, one large one stands .","code":"library(twoway) data(\"sentRT\") sentRT #>       sent1 sent2 sent3 #> subj1   1.7   1.9   2.0 #> subj2   4.4   4.5   5.7 #> subj3   6.6   7.4  10.5 sent.2way <- twoway(sentRT) print(sent.2way) #>  #> Mean decomposition (Dataset: \"sentRT\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>          sent1    sent2    sent3      roweff   #>        + -------- -------- -------- + -------- #> subj1  |  0.56667  0.40000 -0.96667 : -3.10000 #> subj2  |  0.26667  0.00000 -0.26667 : -0.10000 #> subj3  | -0.83333 -0.40000  1.23333 :  3.20000 #>        + ........ ........ ........ + ........ #> coleff | -0.73333 -0.36667  1.10000 :  4.96667 print(twoway(sentRT, method=\"median\"), border=2) #>  #> Median polish decomposition (Dataset: \"sentRT\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>          sent1 sent2 sent3   roweff #>        + ----  ----  ----  + ----   #> subj1  |  0.0   0.0  -1.1  : -2.6   #> subj2  |  0.1   0.0   0.0  :  0.0   #> subj3  | -0.6   0.0   1.9  :  2.9   #>        + ....  ....  ....  + ....   #> coleff | -0.2   0.0   1.2  :  4.5"},{"path":"http://friendly.github.io/twoway/index.html","id":"plot-methods","dir":"","previous_headings":"Example","what":"Plot methods","title":"Analysis of Two-Way Tables","text":"plot method twoway objects currently provides two types plots: plot fitted values additive models residuals (default, =\"fit\") diagnostic plot interaction residuals vs. comparison values additivity (=\"diagnose\").  diagnostic plot shows regression residuals additive model comparison values additive model. points plot reasonably linear non-zero slope, b, suggested power transformation response x1−bx^{1-b} often remove non-additivity.  opposite-corner pattern residuals analysis means. diagnostic plot, positive slope, b=1.6b=1.6 suggests power transformation x1−b=x−0.6x^{1-b} = x^{-0.6}, can taken close 1/x1 / \\sqrt{x}. Alternatively, reaction time data often easily analyzed classical methods results easily understood terms response speed, using transformation 1/x1/x.","code":"plot(sent.2way) plot(sent.2way, which=\"diagnose\") #> Slope of Residual on comparison value:  1.6  #> Suggested power transformation:         -0.6  #> Ladder of powers transformation:        reciprocal root"},{"path":"http://friendly.github.io/twoway/index.html","id":"anova-method","dir":"","previous_headings":"Example","what":"anova method","title":"Analysis of Two-Way Tables","text":"present version, anova() method \"twoway\" object gives results two analyses: one additive model, one model allowing 1 df non-additivity. assume row column effects fit using means (method=\"mean\"). variety tests additivity twoway tables n=1n=1 per cell. number implemented additivityTests package.","code":"anova(sent.2way) #> Dataset: sentRT; method: \"mean\" #>  #> Analysis of Variance Table, assuming additivity #>  #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> row        2 59.580 29.7900 30.2949 0.003835 ** #> col        2  5.647  2.8233  2.8712 0.168574    #> Residuals  4  3.933  0.9833                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Analysis of Variance Table, allowing non-additivity #>  #>            Df Sum Sq Mean Sq F value    Pr(>F)     #> row         2 59.580 29.7900 513.449 0.0001572 *** #> col         2  5.647  2.8233  48.662 0.0051710 **  #> nonadd      1  3.759  3.7593  64.793 0.0040046 **  #> pure error  3  0.174  0.0580                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"http://friendly.github.io/twoway/index.html","id":"other-methods-and-functions","dir":"","previous_headings":"Example","what":"Other methods and functions","title":"Analysis of Two-Way Tables","text":".data.frame() method \"twoway\" object gives tidy data.frame result, containing components fitted values quantities. utility functions to_long() to_wide() facilitate conversion matrix format long format variables Row, Col Value.","code":"as.data.frame(sent.2way) #>     row   col data  fit  dif residual roweff coleff   nonadd #> 1 subj1 sent1  1.7 1.13 7.33    0.567   -3.1 -0.733  0.45772 #> 2 subj2 sent1  4.4 4.13 4.33    0.267   -0.1 -0.733  0.01477 #> 3 subj3 sent1  6.6 7.43 1.03   -0.833    3.2 -0.733 -0.47248 #> 4 subj1 sent2  1.9 1.50 7.70    0.400   -3.1 -0.367  0.22886 #> 5 subj2 sent2  4.5 4.50 4.70    0.000   -0.1 -0.367  0.00738 #> 6 subj3 sent2  7.4 7.80 1.40   -0.400    3.2 -0.367 -0.23624 #> 7 subj1 sent3  2.0 2.97 9.17   -0.967   -3.1  1.100 -0.68658 #> 8 subj2 sent3  5.7 5.97 6.17   -0.267   -0.1  1.100 -0.02215 #> 9 subj3 sent3 10.5 9.27 2.87    1.233    3.2  1.100  0.70872"},{"path":"http://friendly.github.io/twoway/index.html","id":"todos","dir":"","previous_headings":"","what":"TODOs","title":"Analysis of Two-Way Tables","text":"package middle stage development. small TODOs scattered throughout code. addition: nicer use names row column variables displays, rather Row Col.","code":""},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"Test 1-df interaction two-way ANOVA table Tukey test.","code":""},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"","code":"# S3 method for class 'twoway' anova(object, ...)"},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"object class(\"twoway\") object ... arguments passed , used ","code":""},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"present, function simply gives results ANOVAs additive model, model including 1 df          term non-additivity, anova() comparison two.          analysis based row column means.","code":""},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"Michael Friendly","code":""},{"path":"http://friendly.github.io/twoway/reference/anova.twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA summary for a two-way table, including Tukey Additivity Test — anova.twoway","text":"","code":"data(sentRT) sent.2way <- twoway(sentRT) anova(sent.2way) #> Dataset: sentRT; method: \"mean\" #>  #> Analysis of Variance Table, assuming additivity #>  #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> row        2 59.580 29.7900 30.2949 0.003835 ** #> col        2  5.647  2.8233  2.8712 0.168574    #> Residuals  4  3.933  0.9833                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Analysis of Variance Table, allowing non-additivity #>  #>            Df Sum Sq Mean Sq F value    Pr(>F)     #> row         2 59.580 29.7900 513.449 0.0001572 *** #> col         2  5.647  2.8233  48.662 0.0051710 **  #> nonadd      1  3.759  3.7593  64.793 0.0040046 **  #> pure error  3  0.174  0.0580                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"http://friendly.github.io/twoway/reference/Arizona.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean monthly temperatures in Arizona — Arizona","title":"Mean monthly temperatures in Arizona — Arizona","text":"data set used Tukey (1977) initial examples twoway tables","code":""},{"path":"http://friendly.github.io/twoway/reference/Arizona.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mean monthly temperatures in Arizona — Arizona","text":"matrix 7 rows (Month) 3 columns (City) value mean       monthly temperature degrees F. matrix responseName attribute, \"Temperature\"","code":""},{"path":"http://friendly.github.io/twoway/reference/Arizona.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean monthly temperatures in Arizona — Arizona","text":"Tukey, J. W. (1977). Exploratory Data Analysis, Reading MA: Addison-Wesley. Exhibit 1 chapter 10, p. 333","code":""},{"path":"http://friendly.github.io/twoway/reference/Arizona.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean monthly temperatures in Arizona — Arizona","text":"","code":"data(Arizona) (AR.2way <-twoway(Arizona, method=\"median\")) #>  #> Median polish decomposition (Dataset: \"Arizona\"; Response: Temperature) #> Residuals bordered by row effects, column effects, and overall #>  #>         City #> Month      Flagstaff Phoenix Yuma    roweff #>          + -----     -----   ----- + -----  #>   Jul    |   0.0       0.2    -0.9 :  19.1  #>   Aug    |   0.0       0.2     0.0 :  17.3  #>   Sep    |  -1.0       0.0     0.0 :  11.9  #>   Oct    |   0.0       0.0     0.0 :   0.0  #>   Nov    |   1.9      -0.2     0.0 : -12.2  #>   Dec    |   1.0       0.0    -0.6 : -18.7  #>   Jan    |   0.3       0.0     0.0 : -21.1  #>          + .....     .....   ..... + .....  #>   coleff | -24.7       0.0     5.6 :  70.8  #>   ## plot(AR.2way)"},{"path":"http://friendly.github.io/twoway/reference/as.data.frame.twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a twoway object to a data frame This function converts a ","title":"Convert a twoway object to a data frame This function converts a ","text":"rows columns data table strung standard R order vector, joined row column labels. Additional columns added, representing calculated values used two-way display.","code":""},{"path":"http://friendly.github.io/twoway/reference/as.data.frame.twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a twoway object to a data frame This function converts a ","text":"","code":"# S3 method for class 'twoway' as.data.frame(x, ...)"},{"path":"http://friendly.github.io/twoway/reference/as.data.frame.twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a twoway object to a data frame This function converts a ","text":"x \"twoway\" object ... arguments, presently ignored","code":""},{"path":"http://friendly.github.io/twoway/reference/as.data.frame.twoway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a twoway object to a data frame This function converts a ","text":"data.frame \\(r \\times c\\) rows corresponding input data table, following columns row row labels col column labels data data value cell fit fitted value, roweff row effect coleff column effect nonadd 1 df non-additivity value","code":""},{"path":"http://friendly.github.io/twoway/reference/as.data.frame.twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a twoway object to a data frame This function converts a ","text":"","code":"data(sentRT) sent.2way <- twoway(sentRT) as.data.frame(sent.2way) #>     row   col data      fit      dif   residual roweff     coleff      nonadd #> 1 subj1 sent1  1.7 1.133333 7.333333  0.5666667   -3.1 -0.7333333  0.45771812 #> 2 subj2 sent1  4.4 4.133333 4.333333  0.2666667   -0.1 -0.7333333  0.01476510 #> 3 subj3 sent1  6.6 7.433333 1.033333 -0.8333333    3.2 -0.7333333 -0.47248322 #> 4 subj1 sent2  1.9 1.500000 7.700000  0.4000000   -3.1 -0.3666667  0.22885906 #> 5 subj2 sent2  4.5 4.500000 4.700000  0.0000000   -0.1 -0.3666667  0.00738255 #> 6 subj3 sent2  7.4 7.800000 1.400000 -0.4000000    3.2 -0.3666667 -0.23624161 #> 7 subj1 sent3  2.0 2.966667 9.166667 -0.9666667   -3.1  1.1000000 -0.68657718 #> 8 subj2 sent3  5.7 5.966667 6.166667 -0.2666667   -0.1  1.1000000 -0.02214765 #> 9 subj3 sent3 10.5 9.266667 2.866667  1.2333333    3.2  1.1000000  0.70872483"},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an initial twoway object representing the data before fitting — as.twoway","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"Create initial twoway object representing data fitting Method matrix input","code":""},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"","code":"as.twoway(x, ...)  # S3 method for class 'matrix' as.twoway(   x,   ...,   name = deparse(substitute(x)),   responseName = name,   varNames = names(dimnames(x)) )"},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"x numeric matrix numeric data frame rownames ... arguments, unused name Name data matrix responseName Name response variable varNames Names row column variables","code":""},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"object class c(\"twoway\") effects(roweff, coleff, overall) set zero, method=\"Initial\"","code":""},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"Richard M. Heiberger Richard M. Heiberger","code":""},{"path":"http://friendly.github.io/twoway/reference/as.twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an initial twoway object representing the data before fitting — as.twoway","text":"","code":"data(taskRT) as.twoway(taskRT) #>  #> Initial data (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1 topic2 topic3 topic4   roweff #>          + ----   ----   ----   ----   + ----   #>   Easy   | 2.43   3.12   3.68   4.04   : 0.00   #>   Medium | 3.41   3.91   4.07   5.10   : 0.00   #>   Hard   | 4.21   4.65   5.87   5.69   : 0.00   #>          + ....   ....   ....   ....   + ....   #>   coleff | 0.00   0.00   0.00   0.00   : 0.00   #>"},{"path":"http://friendly.github.io/twoway/reference/drugs.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores for 5 subjects after being given each of 4 drugs — drugs","title":"Scores for 5 subjects after being given each of 4 drugs — drugs","text":"original source Winer (1971), p. 268.  used example Friendly (1991).","code":""},{"path":"http://friendly.github.io/twoway/reference/drugs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scores for 5 subjects after being given each of 4 drugs — drugs","text":"Friendly, M. (1991). SAS System Statistical Graphics Cary, NC: SAS Institute, Output 7.28","code":""},{"path":"http://friendly.github.io/twoway/reference/drugs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scores for 5 subjects after being given each of 4 drugs — drugs","text":"","code":"data(drugs) twoway(drugs) #>  #> Mean decomposition (Dataset: \"drugs\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>          drug1 drug2 drug3 drug4   roweff #>        + ----  ----  ----  ----  + ----   #> subj1  | -4.7  -0.7   2.5   2.9  :  9.1   #> subj2  | -1.7   0.3   1.5  -0.1  :  2.1   #> subj3  | -1.2   2.8   0.0  -1.6  : -0.4   #> subj4  |  4.3  -3.7  -0.5  -0.1  : -1.9   #> subj5  |  3.3   1.3  -3.5  -1.1  : -8.9   #>        + ....  ....  ....  ....  + ....   #> coleff | -9.3   0.7   1.5   7.1  : 24.9   #>"},{"path":"http://friendly.github.io/twoway/reference/hstart.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of U.S. housing starts by month for the years 1965 – 1973 — hstart","title":"Number of U.S. housing starts by month for the years 1965 – 1973 — hstart","text":"Number U.S. housing starts month years 1965 – 1973","code":""},{"path":"http://friendly.github.io/twoway/reference/hstart.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of U.S. housing starts by month for the years 1965 – 1973 — hstart","text":"9 x 12 matrix, entries number housing starts, thousands","code":""},{"path":"http://friendly.github.io/twoway/reference/hstart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of U.S. housing starts by month for the years 1965 – 1973 — hstart","text":"Becker, Chambers & Wilks (1988), New S Language, Brooks Cole.             Friendly, M. (1991). SAS System Statistical Graphics Cary, NC: SAS Institute, p.380","code":""},{"path":"http://friendly.github.io/twoway/reference/hstart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of U.S. housing starts by month for the years 1965 – 1973 — hstart","text":"","code":"hstart.2way <- twoway(hstart, method=\"mean\") plot(hstart.2way)"},{"path":"http://friendly.github.io/twoway/reference/insectCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","title":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","text":"Counts numbers insect, Leptinotarsa decemlineata (Colorado potato beetle), sum two plots treated alike, combinations 4 treatments 6 areas field chosen relatively homogeneous.","code":""},{"path":"http://friendly.github.io/twoway/reference/insectCounts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","text":"4 x 6 matrix, rows treatments columns areas field.","code":""},{"path":"http://friendly.github.io/twoway/reference/insectCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","text":"data used Tukey (1977) Exhibit 1 Ch 11 throughout chapter examples median polish. data counts, either sqrt log transformation reasonable.","code":""},{"path":"http://friendly.github.io/twoway/reference/insectCounts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","text":"Tukey, J. W. (1977). Exploratory Data Analysis, Reading MA: Addison-Wesley. Exhibit 1 chapter 111","code":""},{"path":"http://friendly.github.io/twoway/reference/insectCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts of an insect for the combinations of 4 treatments and 6 areas of a field — insectCounts","text":"","code":"insect.2way <- twoway(insectCounts, method=\"median\") print(insect.2way, digits=2) #>  #> Median polish decomposition (Dataset: \"insectCounts\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>         area #> treat      area1   area2   area3   area4   area5   area6     roweff  #>          + ------- ------- ------- ------- ------- ------- + ------- #>   t1     |   71.07   -2.54    0.39  394.50  -75.54   -1.50 :  252.00 #>   t2     |    2.86  -32.75   71.18   30.29 -135.75   -0.71 :  -60.79 #>   t3     | -171.71   45.68   -0.39  -30.29  106.68    0.71 :   60.79 #>   t4     |   -2.86    2.54   -7.54  -72.43   75.54   93.57 : -162.07 #>          + ....... ....... ....... ....... ....... ....... + ....... #>   coleff |  -26.84  -35.23   26.84   52.73   28.77 -116.27 :  195.77 #>   plot(insect.2way)  plot(insect.2way, which=\"diagnose\")  #> Slope of Residual on comparison value:  0.7  #> Suggested power transformation:         0.3  #> Ladder of powers transformation:        cube root   # try sqrt transformation insect.sqrt <- twoway(sqrt(insectCounts), method=\"median\") print(insect.sqrt, digits=2) #>  #> Median polish decomposition (Dataset: \"sqrt(insectCounts)\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>         area #> treat      area1 area2 area3 area4 area5 area6   roweff #>          + ----- ----- ----- ----- ----- ----- + -----  #>   t1     |  1.25  0.41 -2.78  5.07 -3.38 -0.34 :  9.12  #>   t2     |  0.86 -0.41  1.94  1.17 -6.86 -3.02 : -2.14  #>   t3     | -6.34  3.48 -0.78 -1.17  3.38  0.34 :  2.14  #>   t4     | -0.86 -0.77  0.78 -3.03  6.42  2.88 : -8.96  #>          + ..... ..... ..... ..... ..... ..... + .....  #>   coleff | -1.24 -2.33  2.41  2.68  1.23 -3.66 : 13.06  #>   plot(insect.sqrt)  plot(insect.sqrt, which=\"diagnose\")  #> Slope of Residual on comparison value:  0.1  #> Suggested power transformation:         0.9  #> Ladder of powers transformation:        no transformation"},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"input power value rounded nearest integer fractional powers, \\(\\pm 1/3, 1/2\\). function presently designed just display purposes.","code":""},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"","code":"ladder_power(p)"},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"p numeric power, use transformation response, y, form \\(y^p\\), p=0 interpreted mean \\(log(y)\\)","code":""},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"named list two elements: power, ladder--power value,         name, name transformation","code":""},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"use, transformation via ladder powers usually attaches minus sign       transformation power < 0, order response values       preserved transformation. Thus, result power = -0.5 interpreted       mean \\(-1 / \\sqrt{y}\\).","code":""},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"Tukey, J. W. (1977). Exploratory Data Analysis, Reading MA: Addison-Wesley.","code":""},{"path":"http://friendly.github.io/twoway/reference/ladder_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the nearest ladder-of-powers representation of a power transformation — ladder_power","text":"","code":"ladder_power(0.6) #> $power #> [1] 0.5 #>  #> $name #> [1] \"square root\" #>  ladder_power(-0.6) #> $power #> [1] -0.5 #>  #> $name #> [1] \"reciprocal root\" #>"},{"path":"http://friendly.github.io/twoway/reference/meanfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a two-way table using row and column means — meanfit","title":"Fit a two-way table using row and column means — meanfit","text":"Fit two-way table using row column means","code":""},{"path":"http://friendly.github.io/twoway/reference/meanfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a two-way table using row and column means — meanfit","text":"","code":"meanfit(x, ..., na.rm = FALSE)"},{"path":"http://friendly.github.io/twoway/reference/meanfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a two-way table using row and column means — meanfit","text":"x numeric matrix data frame ... arguments passed na.rm logical. missing values removed?","code":""},{"path":"http://friendly.github.io/twoway/reference/meanfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a two-way table using row and column means — meanfit","text":"object class c(\"twoway\") following named components: overall fitted constant term. roweff fitted row effects. coleff fitted column effects. residuals residuals. name name dataset. rownames names rows colnames names columns method \"median\"","code":""},{"path":"http://friendly.github.io/twoway/reference/medianfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a two-way table using median polish — medianfit","title":"Fit a two-way table using median polish — medianfit","text":"Fit two-way table using median polish","code":""},{"path":"http://friendly.github.io/twoway/reference/medianfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a two-way table using median polish — medianfit","text":"","code":"medianfit(x, trace.iter = FALSE, ...)"},{"path":"http://friendly.github.io/twoway/reference/medianfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a two-way table using median polish — medianfit","text":"x numeric matrix data frame trace.iter whether give verbose output iteration history median polish. ... arguments passed ","code":""},{"path":"http://friendly.github.io/twoway/reference/medianfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a two-way table using median polish — medianfit","text":"object class c(\"twoway\", \"medpolish\") following named components: overall fitted constant term. roweff fitted row effects. coleff fitted column effects. residuals residuals. name name dataset. rownames names rows colnames names columns method \"median\"","code":""},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for two-way tables — plot.twoway","title":"Plot methods for two-way tables — plot.twoway","text":"Plots either fitted values residuals additivity diagnostic plot removable non-additivity power transformation","code":""},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for two-way tables — plot.twoway","text":"","code":"# S3 method for class 'twoway' plot(x, which = c(\"fit\", \"diagnose\"), ..., na.rm = any(is.na(x$residuals)))  # S3 method for class 'twoway.fit' plot(   x,   main = paste0(\"Tukey two-way fit plot for \", x$name, \" (method: \", x$method, \")\"),   xlab = expression(hat(mu) * \" + Column Effect - Row Effect\"),   ylab = expression(\"Fit = \" * hat(mu) * \" + Column Effect + Row Effect\"),   rfactor = 1,   rcolor = c(\"blue\", \"red\"),   lwd = 3,   ylim = NULL,   ...,   na.rm = any(is.na(x$residuals)) )  # S3 method for class 'twoway.diagnose' plot(x, annotate = TRUE, jitter = FALSE, smooth = FALSE, pch = 16, ...)"},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for two-way tables — plot.twoway","text":"x class(\"twoway\") object one \"fit\" \"diagnose\" ... arguments, passed plot na.rm logical. missing values removed? main plot title xlab X axis label ylab Y axis label rfactor draw lines abs(residuals) > rfactor*sqrt(MSPE) rcolor vector length 2 giving color lines positive negative residuals lwd line width residual lines fit plot ylim Y axis limits annotate logical value; TRUE, slope power displayed diagnostic plot jitter logical value; TRUE, comparison values plot jittered avoid overplotting smooth logical value; TRUE, smoothed loess curve added plot pch Plot character point symbols diagnostic plot","code":""},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot methods for two-way tables — plot.twoway","text":"diagnostic plot invisibly returns list elements c(\"slope\", \"power\")","code":""},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot methods for two-way tables — plot.twoway","text":"=\"fit\" plot, basic result comes plot row effects column fitted     values, appears rectangular grid coordinates.  Rotating 45 degrees counterclockwise give plot     vertical coordinate fitted value two-way table, horizontal coordinate column fit     minus row effect.  spacing grid lines rows columns table show relative magnitudes     row/column means medians. =\"diagnose\" plot, interaction residuals additive model, \\(y_{ij} = \\mu + \\alpha_i + \\beta_j\\),     plotted estimated components \\(\\alpha_i \\beta_j / \\mu\\). plot shows substantially non-zero     slope, \\(b\\), analysis suggests power transformation, \\( y \\rightarrow y^(1-b)\\) might reduce     apparent interaction effects. plots, want directly compare result method=\"mean\" method=\"median\",      essential set xlim ylim axes call.","code":""},{"path":"http://friendly.github.io/twoway/reference/plot.twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods for two-way tables — plot.twoway","text":"","code":"data(taskRT) tw <- twoway(taskRT) tw #>  #> Mean decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1    topic2    topic3    topic4      roweff    #>          + --------- --------- --------- --------- + --------- #>   Easy   | -0.055833  0.090833  0.004167 -0.039167 : -0.864167 #>   Medium |  0.119167  0.075833 -0.410833  0.215833 : -0.059167 #>   Hard   | -0.063333 -0.166667  0.406667 -0.176667 :  0.923333 #>          + ......... ......... ......... ......... + ......... #>   coleff | -0.831667 -0.288333  0.358333  0.761667 :  4.181667 #>  twmed <- twoway(taskRT, method=\"median\") twmed #>  #> Median polish decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1  topic2  topic3  topic4    roweff  #>          + ------- ------- ------- ------- + ------- #>   Easy   | -0.0850  0.1050  0.0000  0.0000 : -0.8950 #>   Medium |  0.0000  0.0000 -0.5050  0.1650 :  0.0000 #>   Hard   |  0.0225 -0.0375  0.5175 -0.0225 :  0.7775 #>          + ....... ....... ....... ....... + ....... #>   coleff | -0.8325 -0.3325  0.3325  0.6925 :  4.2425 #>  plot(tw,    xlim=c(2,7), ylim=c(2,7)) ## use the same xlim and ylim, for comparison  plot(twmed, xlim=c(2,7), ylim=c(2,7))   plot(tw,    which=\"diagnose\", xlim=c(-.19, .19), ylim=c(-.5, .55))  #> Slope of Residual on comparison value:  0.2  #> Suggested power transformation:         0.8  #> Ladder of powers transformation:        no transformation  plot(twmed, which=\"diagnose\", xlim=c(-.19, .19), ylim=c(-.5, .55))  #> Slope of Residual on comparison value:  0.2  #> Suggested power transformation:         0.8  #> Ladder of powers transformation:        no transformation   data(insectCounts) twi <- twoway(insectCounts) twimed <- twoway(insectCounts, method=\"median\")  plot(twi,    xlim=c(-250, 700), ylim=c(-180, 900))  plot(twimed, xlim=c(-250, 700), ylim=c(-180, 900))   plot(twi,    which=\"diagnose\", xlim=c(-160, 170), ylim=c(-200, 400))  ## power = .1  #> Slope of Residual on comparison value:  0.9  #> Suggested power transformation:         0.1  #> Ladder of powers transformation:        log  plot(twimed, which=\"diagnose\", xlim=c(-160, 170), ylim=c(-200, 400))  ## power = .3  #> Slope of Residual on comparison value:  0.7  #> Suggested power transformation:         0.3  #> Ladder of powers transformation:        cube root"},{"path":"http://friendly.github.io/twoway/reference/print.twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for two-way tables — print.twoway","title":"Print method for two-way tables — print.twoway","text":"Print method two-way tables","code":""},{"path":"http://friendly.github.io/twoway/reference/print.twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for two-way tables — print.twoway","text":"","code":"# S3 method for class 'twoway' print(x, digits = getOption(\"digits\"), border = 2, zapsmall = TRUE, ...)"},{"path":"http://friendly.github.io/twoway/reference/print.twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for two-way tables — print.twoway","text":"x numeric matrix digits number digits print border 0, components \"twoway\" object (\"overall\", \"roweff\", \"coleff\", \"residuals\") printed separately; 1, row, column overall effects joined residuals single table. 2, row, column, overall residuals joined, decorated horizontal vertical rules zapsmall logical value; TRUE small residuals printed 0. ... arguments passed ","code":""},{"path":"http://friendly.github.io/twoway/reference/print.twoway.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print method for two-way tables — print.twoway","text":"Michael Friendly, Richard Heiberger","code":""},{"path":"http://friendly.github.io/twoway/reference/print.twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for two-way tables — print.twoway","text":"","code":"data(taskRT) task.2way <- twoway(taskRT) print(task.2way) #>  #> Mean decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1    topic2    topic3    topic4      roweff    #>          + --------- --------- --------- --------- + --------- #>   Easy   | -0.055833  0.090833  0.004167 -0.039167 : -0.864167 #>   Medium |  0.119167  0.075833 -0.410833  0.215833 : -0.059167 #>   Hard   | -0.063333 -0.166667  0.406667 -0.176667 :  0.923333 #>          + ......... ......... ......... ......... + ......... #>   coleff | -0.831667 -0.288333  0.358333  0.761667 :  4.181667 #>  print(task.2way, border=0) #>  #> Mean decomposition (Dataset: \"taskRT\"; Response: RT) #>  #> Overall: 4.181667 #>  #> Row Effects: Task #>        Easy      Medium        Hard  #> -0.86416667 -0.05916667  0.92333333  #>  #> Column Effects: #>  #> Column Effects: Topic #>     topic1     topic2     topic3     topic4  #> -0.8316667 -0.2883333  0.3583333  0.7616667  #>  #> Residuals: #>         Topic #> Task        topic1    topic2     topic3    topic4 #>   Easy   -0.055833  0.090833  0.0041667 -0.039167 #>   Medium  0.119167  0.075833 -0.4108333  0.215833 #>   Hard   -0.063333 -0.166667  0.4066667 -0.176667 #> attr(,\"responseName\") #> [1] \"RT\" #>   data(sentRT) sent.2way <- twoway(sentRT) print(sent.2way) #>  #> Mean decomposition (Dataset: \"sentRT\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>          sent1    sent2    sent3      roweff   #>        + -------- -------- -------- + -------- #> subj1  |  0.56667  0.40000 -0.96667 : -3.10000 #> subj2  |  0.26667  0.00000 -0.26667 : -0.10000 #> subj3  | -0.83333 -0.40000  1.23333 :  3.20000 #>        + ........ ........ ........ + ........ #> coleff | -0.73333 -0.36667  1.10000 :  4.96667 #>  print(sent.2way, border=1) #>  #> Mean decomposition (Dataset: \"sentRT\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>           sent1    sent2    sent3  roweff #> subj1   0.56667  0.40000 -0.96667 -3.1000 #> subj2   0.26667  0.00000 -0.26667 -0.1000 #> subj3  -0.83333 -0.40000  1.23333  3.2000 #> coleff -0.73333 -0.36667  1.10000  4.9667 #>"},{"path":"http://friendly.github.io/twoway/reference/residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a twoway object — residuals.twoway","title":"Extract residuals from a twoway object — residuals.twoway","text":"Extract residuals twoway object Extract fitted values twoway object","code":""},{"path":"http://friendly.github.io/twoway/reference/residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a twoway object — residuals.twoway","text":"","code":"# S3 method for class 'twoway' residuals(object, nonadd = FALSE, ...)  # S3 method for class 'twoway' fitted(object, nonadd = FALSE, ...)"},{"path":"http://friendly.github.io/twoway/reference/residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a twoway object — residuals.twoway","text":"object class=\"twoway\" object nonadd TRUE, 1 degree freedom term non-additivity subtracted additive residuals ... arguments (unused)","code":""},{"path":"http://friendly.github.io/twoway/reference/residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a twoway object — residuals.twoway","text":"numeric matrix residuals corresponding data supplied twoway numeric matrix fitted values corresponding data supplied twoway","code":""},{"path":"http://friendly.github.io/twoway/reference/residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residuals from a twoway object — residuals.twoway","text":"","code":"data(taskRT) task.2way <- twoway(taskRT) residuals(task.2way) #>         Topic #> Task          topic1      topic2       topic3      topic4 #>   Easy   -0.05583333  0.09083333  0.004166667 -0.03916667 #>   Medium  0.11916667  0.07583333 -0.410833333  0.21583333 #>   Hard   -0.06333333 -0.16666667  0.406666667 -0.17666667 #> attr(,\"responseName\") #> [1] \"RT\" residuals(task.2way, nonadd=TRUE) #>         Topic #> Task          topic1      topic2      topic3       topic4 #>   Easy   -0.09103355  0.07862965  0.01933309 -0.006929193 #>   Medium  0.11675662  0.07499779 -0.40979494  0.218040528 #>   Hard   -0.02572307 -0.15362744  0.39046184 -0.211111335 #> attr(,\"responseName\") #> [1] \"RT\"  sum(residuals(task.2way)^2)               #  SSE for additive model #> [1] 0.4766167 sum(residuals(task.2way, nonadd=TRUE)^2)  # SSPE, non-additive model #> [1] 0.4709134 data(taskRT) task.2way <- twoway(taskRT) fitted(task.2way) #>          topic1   topic2   topic3   topic4 #> Easy   4.900365 4.430835 3.872007 3.523460 #> Medium 4.230874 4.198726 4.160465 4.136601 #> Hard   3.413761 3.915439 4.512528 4.884939 fitted(task.2way, nonadd=TRUE) #>          topic1   topic2   topic3   topic4 #> Easy   4.935565 4.443038 3.856841 3.491222 #> Medium 4.233284 4.199562 4.159427 4.134394 #> Hard   3.376151 3.902400 4.528733 4.919384"},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":null,"dir":"Reference","previous_headings":"","what":"Compressibility of Rubber — Rubber","title":"Compressibility of Rubber — Rubber","text":"specific volume natural rubber measured four values temperature six values pressure. evidence volume additive relation temperature pressure?","code":""},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compressibility of Rubber — Rubber","text":"","code":"Rubber"},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Compressibility of Rubber — Rubber","text":"4 x 6 matrix, cell values specific volume (cubic centimeters per gram)         peroxide-cured rubber. row column variables : Temperature, degrees Celcuis Pressure, kg / cm^2 atmospheric pressure.","code":""},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compressibility of Rubber — Rubber","text":"Wood, L. . & Martin, G. M. (1964). \"Compressibility natural rubber pressures      500kg/cm^2\",  Journal Research National Standards Bureau–. Physics & Chemistry,      **68A**, 259–268.","code":""},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compressibility of Rubber — Rubber","text":"Emerson, J. D. & Wong, G. Y. (1985). \"Resistant Nonadditve Fits Two-Way Tables\".      Hoaglin, D. C., Mosteller, F., & Tukey, J. W. (Eds.). Exploring data tables, trends shapes. John Wiley Sons.      Ch. 3, Table 3.1.","code":""},{"path":"http://friendly.github.io/twoway/reference/Rubber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compressibility of Rubber — Rubber","text":"","code":"Rubber #>            Pressure #> Temperature    500    400    300    200    100      0 #>          0  1.0637 1.0678 1.0719 1.0763 1.0807 1.0857 #>          10 1.0697 1.0739 1.0782 1.0828 1.0876 1.0927 #>          20 1.0756 1.0801 1.0846 1.0894 1.0944 1.0988 #>          25 1.0786 1.0830 1.0877 1.0926 1.0977 1.1032 #> attr(,\"responseName\") #> [1] \"Volume\" # scale the response to avoid small decimals rub <- 10000*Rubber rubfit <- twoway(rub, \"median\") plot(rubfit)"},{"path":"http://friendly.github.io/twoway/reference/sentRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Reaction times for T/F judgments — sentRT","title":"Reaction times for T/F judgments — sentRT","text":"demonstration 3 x 3 two-way table composed reaction times three subjects making T/F judgments three types sentences","code":""},{"path":"http://friendly.github.io/twoway/reference/sentRT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reaction times for T/F judgments — sentRT","text":"Friendly, M. (1991). SAS System Statistical Graphics Cary, NC: SAS Institute, Table 7.2","code":""},{"path":"http://friendly.github.io/twoway/reference/sentRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reaction times for T/F judgments — sentRT","text":"","code":"data(sentRT) twoway(sentRT) #>  #> Mean decomposition (Dataset: \"sentRT\"; Response: Value) #> Residuals bordered by row effects, column effects, and overall #>  #>          sent1    sent2    sent3      roweff   #>        + -------- -------- -------- + -------- #> subj1  |  0.56667  0.40000 -0.96667 : -3.10000 #> subj2  |  0.26667  0.00000 -0.26667 : -0.10000 #> subj3  | -0.83333 -0.40000  1.23333 :  3.20000 #>        + ........ ........ ........ + ........ #> coleff | -0.73333 -0.36667  1.10000 :  4.96667 #>"},{"path":"http://friendly.github.io/twoway/reference/taskRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on reaction times for various tasks and topics — taskRT","title":"Data on reaction times for various tasks and topics — taskRT","text":"demonstration 3 x 4 two-way table composed reaction times tasks varying difficulty, content different topics.","code":""},{"path":"http://friendly.github.io/twoway/reference/taskRT.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on reaction times for various tasks and topics — taskRT","text":"matrix 3 rows 4 columns, rows task difficulty levels columns topics.        cell values average reaction times (sec.). matrix responseName attribute, \"RT\"","code":""},{"path":"http://friendly.github.io/twoway/reference/taskRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data on reaction times for various tasks and topics — taskRT","text":"","code":"data(taskRT) twoway(taskRT) #>  #> Mean decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1    topic2    topic3    topic4      roweff    #>          + --------- --------- --------- --------- + --------- #>   Easy   | -0.055833  0.090833  0.004167 -0.039167 : -0.864167 #>   Medium |  0.119167  0.075833 -0.410833  0.215833 : -0.059167 #>   Hard   | -0.063333 -0.166667  0.406667 -0.176667 :  0.923333 #>          + ......... ......... ......... ......... + ......... #>   coleff | -0.831667 -0.288333  0.358333  0.761667 :  4.181667 #>  twoway(taskRT, method=\"median\") #>  #> Median polish decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1  topic2  topic3  topic4    roweff  #>          + ------- ------- ------- ------- + ------- #>   Easy   | -0.0850  0.1050  0.0000  0.0000 : -0.8950 #>   Medium |  0.0000  0.0000 -0.5050  0.1650 :  0.0000 #>   Hard   |  0.0225 -0.0375  0.5175 -0.0225 :  0.7775 #>          + ....... ....... ....... ....... + ....... #>   coleff | -0.8325 -0.3325  0.3325  0.6925 :  4.2425 #>"},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape a data.frame or matrix to a long data.frame — to_long","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"Reshape data.frame matrix long data.frame Reshape data.frame matrix wide data.frame","code":""},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"","code":"to_long(   wide,   rowname = NULL,   colname = NULL,   responseName = deparse(substitute(wide)),   varNames = c(\"Row\", \"Col\") )  to_wide(long, row = 1, col = 2, response = 3)"},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"wide data.frame matrix wide form rowname Name row variable colname Name column variable responseName Name response variable.  wide matrix attribute begins \"response\", value taken responseName.  Otherwise, name wide object used. varNames Default names row column variables passed rowname colname long data.frame long form row Column index quoted name row variable col Column index quoted name column variable response Column index quoted name response variable","code":""},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"data.frame long format","code":""},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"Michael Friendly Richard M. Heiberger Michael Friendly Richard M. Heiberger","code":""},{"path":"http://friendly.github.io/twoway/reference/to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape a data.frame or matrix to a long data.frame — to_long","text":"","code":"Arizona.long <- to_long(Arizona, varNames=c(\"Month\", \"City\")) Arizona.long #>    Month      City Temperature #> 1    Jul Flagstaff        65.2 #> 2    Aug Flagstaff        63.4 #> 3    Sep Flagstaff        57.0 #> 4    Oct Flagstaff        46.1 #> 5    Nov Flagstaff        35.8 #> 6    Dec Flagstaff        28.4 #> 7    Jan Flagstaff        25.3 #> 8    Jul   Phoenix        90.1 #> 9    Aug   Phoenix        88.3 #> 10   Sep   Phoenix        82.7 #> 11   Oct   Phoenix        70.8 #> 12   Nov   Phoenix        58.4 #> 13   Dec   Phoenix        52.1 #> 14   Jan   Phoenix        49.7 #> 15   Jul      Yuma        94.6 #> 16   Aug      Yuma        93.7 #> 17   Sep      Yuma        88.3 #> 18   Oct      Yuma        76.4 #> 19   Nov      Yuma        64.2 #> 20   Dec      Yuma        57.1 #> 21   Jan      Yuma        55.3  Arizona.long <- to_long(Arizona, varNames=c(\"Month\", \"City\")) # back the other way to_wide(Arizona.long) #>      City #> Month Flagstaff Phoenix Yuma #>   Jul      65.2    90.1 94.6 #>   Aug      63.4    88.3 93.7 #>   Sep      57.0    82.7 88.3 #>   Oct      46.1    70.8 76.4 #>   Nov      35.8    58.4 64.2 #>   Dec      28.4    52.1 57.1 #>   Jan      25.3    49.7 55.3"},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Formula method for twoway analysis using a dataset in long format — twoway.formula","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"formula method reshapes data set long wide format calls default method.","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"","code":"# S3 method for class 'formula' twoway(formula, data, subset, na.action, ...)"},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"formula formula form response ~ rowvar + colvar, response numeric data name data set, containing row vector, column factor numeric response subset expression subset data (unused) na.action NAs? (unused) ... arguments, passed ","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"conversion long wide formula method suggested        https://stackoverflow.com/questions/50469320/--write--formula-method--converts-long--wide","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"Michael Friendly Richard Heiberger","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formula method for twoway analysis using a dataset in long format — twoway.formula","text":"","code":"longRT <- to_long(taskRT) twoway(RT ~ Task + Topic, data=longRT) #>  #> Mean decomposition (Dataset: \"longRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1    topic2    topic3    topic4      roweff    #>          + --------- --------- --------- --------- + --------- #>   Easy   | -0.055833  0.090833  0.004167 -0.039167 : -0.864167 #>   Medium |  0.119167  0.075833 -0.410833  0.215833 : -0.059167 #>   Hard   | -0.063333 -0.166667  0.406667 -0.176667 :  0.923333 #>          + ......... ......... ......... ......... + ......... #>   coleff | -0.831667 -0.288333  0.358333  0.761667 :  4.181667 #>"},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of a two-way table with one observation per cell — twoway","title":"Analysis of a two-way table with one observation per cell — twoway","text":"Fits additive model using either row column means Tukey's median polish procedure","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of a two-way table with one observation per cell — twoway","text":"","code":"twoway(x, ...)  # Default S3 method twoway(   x,   method = c(\"mean\", \"median\"),   ...,   name = deparse(substitute(x)),   responseName = attr(x, \"response\"),   varNames = names(dimnames(x)) )"},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of a two-way table with one observation per cell — twoway","text":"x numeric matrix data frame. ... arguments passed method one \"mean\" \"median\" name name input dataset responseName name response variable varNames names Row Column variables","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of a two-way table with one observation per cell — twoway","text":"object class c(\"twoway\") following named components: overall fitted constant term. roweff fitted row effects. coleff fitted column effects. residuals residuals. name name dataset. rownames names rows colnames names columns method fitting method varNames names row column variables responseName name response variable compValue comparison values, diagnostic plot slope slope value, diagnostic plot power suggested power transformation, 1-slope object class \"twoway\", supplemented additional components used labeling","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of a two-way table with one observation per cell — twoway","text":"rownames(x) used levels row factor colnames(x)          levels column factor.          numeric matrix, function uses names(dimnames(x)) names          variables, , present, responseName attribute name response variable.","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of a two-way table with one observation per cell — twoway","text":"Tukey, J. W. (1977). Exploratory Data Analysis, Reading MA: Addison-Wesley. Friendly, M. (1991). SAS System Statistical Graphics Cary, NC: SAS Institute","code":""},{"path":[]},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis of a two-way table with one observation per cell — twoway","text":"Michael Friendly","code":""},{"path":"http://friendly.github.io/twoway/reference/twoway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of a two-way table with one observation per cell — twoway","text":"","code":"data(taskRT) twoway(taskRT) #>  #> Mean decomposition (Dataset: \"taskRT\"; Response: RT) #> Residuals bordered by row effects, column effects, and overall #>  #>         Topic #> Task       topic1    topic2    topic3    topic4      roweff    #>          + --------- --------- --------- --------- + --------- #>   Easy   | -0.055833  0.090833  0.004167 -0.039167 : -0.864167 #>   Medium |  0.119167  0.075833 -0.410833  0.215833 : -0.059167 #>   Hard   | -0.063333 -0.166667  0.406667 -0.176667 :  0.923333 #>          + ......... ......... ......... ......... + ......... #>   coleff | -0.831667 -0.288333  0.358333  0.761667 :  4.181667 #>"},{"path":"http://friendly.github.io/twoway/reference/VermontPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Vermont country populations from the US Census, 1900-1990 — VermontPop","title":"Vermont country populations from the US Census, 1900-1990 — VermontPop","text":"Vermont country populations US Census, 1900-1990","code":""},{"path":"http://friendly.github.io/twoway/reference/VermontPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vermont country populations from the US Census, 1900-1990 — VermontPop","text":"","code":"VermontPop"},{"path":"http://friendly.github.io/twoway/reference/VermontPop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vermont country populations from the US Census, 1900-1990 — VermontPop","text":"object class data.frame 14 rows 10 columns.","code":""},{"path":"http://friendly.github.io/twoway/reference/VermontPop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vermont country populations from the US Census, 1900-1990 — VermontPop","text":"Morgenthaler, Stephan, John W. Tukey. “Multipolishing Two-Way Plots.” Metrika 53.3 (2001): 245–267.","code":""},{"path":"http://friendly.github.io/twoway/reference/VermontPop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vermont country populations from the US Census, 1900-1990 — VermontPop","text":"","code":"options(digits=4) VP <- twoway(VermontPop,              method=\"median\",              responseName = \"log Population\") VP #>  #> Median polish decomposition (Dataset: \"VermontPop\"; Response: log Population) #> Residuals bordered by row effects, column effects, and overall #>  #>              1900 1910 1920 1930 1940 1950 1960 1970 1980 1990   roweff #>            + ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- + ----   #> Chittenden | -167 -137 -120  -81  -39   40  111  182  195  206 :  383   #> Rutland    |  -23   13    0   24   -1    1    3    2   -7  -25 :  287   #> Washington |  -58   -2  -28    6    6   18   13    6   -7  -31 :  240   #> Windsor    |  -78  -59  -14   -6    1   34   45    8   18   -2 :  204   #> Franklin   |    4   -1    5    9    4    8   -3  -30  -38  -23 :   94   #> Windham    |  -30  -26  -32  -34   -3   11   21   13    7   14 :   75   #> Caledonia  |   -3   25   24   52    5   -1  -29  -82  -82  -94 :    9   #> Bennington |  -36  -43  -35  -30  -16   17   29   44   46   32 :   -9   #> Orleans    |    3   28   43   30    6   -5  -32  -85  -73 -108 :  -42   #> Addison    |   40    0  -26  -40  -38   -4    5   34   63   68 :  -80   #> Orange     |   44   30    0  -11   -1   -2  -34  -44   12   26 : -140   #> Lamoille   |   13   23    1  -30  -26  -12  -31   -2   44   69 : -305   #> Essex      |   94   56   59   44    9   -8  -25 -128 -116 -154 : -570   #> Grand Isle |   75    0    7   29   14  -35 -105  -72  -15    2 : -807   #>            + .... .... .... .... .... .... .... .... .... .... + ....   #> coleff     |    3    3   -1   -4   -6   -5    0   53  107  152 : 4379   #>  plot(VP)"},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-064","dir":"Changelog","previous_headings":"","what":"twoway 0.6.4","title":"twoway 0.6.4","text":"added VermontPop data added Rubber data","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-063","dir":"Changelog","previous_headings":"","what":"twoway 0.6.3","title":"twoway 0.6.3","text":"CRAN release: 2020-06-26 revised plot.twoway() use default na.rm=FALSE revised plot.twoway.fit() use default na.rm=FALSE revised meanfit() use default na.rm=FALSE revised twoway.default() pass … (hence na.rm) meanfit added demo/ directory added demo/example-na.r illustrate use na.rm added demo/00Index Turn travis CI","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-062","dir":"Changelog","previous_headings":"","what":"twoway 0.6.2","title":"twoway 0.6.2","text":"CRAN release: 2018-08-24 revised twoway.default() calculate various quantities include “twoway” object [RMH] revised plot.twoway() separate functions “fit” “diagnose” plots. [RMH] added ladder_power() find nearest ladder powers value enhanced arguments diagnostic plot: jitter, smooth, pch added residuals.twoway() fitted.twoway() added warning, anova.twoway() invoked model fit using row/col medians. prepare initial CRAN release.","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-061","dir":"Changelog","previous_headings":"","what":"twoway 0.6.1","title":"twoway 0.6.1","text":"added .twoway() give initial display two-way table “twoway” object [RMH] print.twoway() now displays names(dimnames(x)) responseName available [RMH].","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-060","dir":"Changelog","previous_headings":"","what":"twoway 0.6.0","title":"twoway 0.6.0","text":"Change built-data sets matrices proper names(dimnames); matrix form, \"responseName\" attribute now partially supported functions. Added to_long() to_wide() facilitate working either way [RMH] twoway.formula() now uses to_wide() rather tidyr constructs, resulting big speed-twoway.default() now calculates slope diagnostic plot, including object [Suggestion: RMH] twoway.default() now prefers matrix inputs, allowing better labels row/col/response variables, yet implemented throughout various methods.","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-050","dir":"Changelog","previous_headings":"","what":"twoway 0.5.0","title":"twoway 0.5.0","text":"Added twoway.formula() method","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-041","dir":"Changelog","previous_headings":"","what":"twoway 0.4.1","title":"twoway 0.4.1","text":"Modified twoway plot method per suggestions RMH (better axis labels) plot.twoway(..., =\"diagnose\") gets annotate= argument print.twoway() gets zapsmall= argument per RMH Added insectCounts data Revised anova.twoway() less redundant","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-040","dir":"Changelog","previous_headings":"","what":"twoway 0.4.0","title":"twoway 0.4.0","text":"Added initial anova.twoway() method Update README","code":""},{"path":"http://friendly.github.io/twoway/news/index.html","id":"twoway-030","dir":"Changelog","previous_headings":"","what":"twoway 0.3.0","title":"twoway 0.3.0","text":"Added NEWS.md file track changes package. Added .data.frame method twoway objects. simpilifies graphical displays computations. print.twoway() gets border=2 option print result fancy table horizontal vertical separators [thx: Richard Heiberger]","code":""}]
